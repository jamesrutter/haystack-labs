---
import Layout from "@/layouts/layout.astro";
import { getCollection } from "astro:content";
import ArrowRight from "@/assets/arrow-right.svg";

// Try to get resources collection, fallback to empty array if it doesn't exist
let resources: any[] = [];
try {
  resources = await getCollection("resources");
} catch (error) {
  // Resources collection doesn't exist yet
  resources = [];
}

const sortedResources = resources.sort((a, b) =>
  a.data.title.localeCompare(b.data.title)
);
---

<Layout
  title="Resources - Haystack Labs"
  description="A collection of resources from Haystack Labs"
>
  <section class="section">
    <div class="wrapper">
      <h1 class="title">Resources</h1>
      {
        resources.length === 0 ? (
          <div class="empty-state">
            <p>No resources available yet. Check back soon!</p>
          </div>
        ) : (
          <div class="resources-grid">
            {sortedResources.map((resource) => (
              <a href={`/resources/${resource.id}`} class="resource-card">
                <div class="resource-card__content">
                  <div class="resource-card__header">
                    <h3 class="resource-card__title">{resource.data.title}</h3>
                    <div class="resource-card__arrow">
                      <ArrowRight width="20" height="20" fill="currentColor" />
                    </div>
                  </div>

                  {resource.data.type && (
                    <div class="resource-card__type">{resource.data.type}</div>
                  )}

                  {resource.data.description && (
                    <p class="resource-card__description">
                      {resource.data.description}
                    </p>
                  )}

                  <div class="resource-card__meta">
                    {resource.data.difficulty && (
                      <div class="resource-card__difficulty">
                        <strong>Difficulty:</strong> {resource.data.difficulty}
                      </div>
                    )}

                    {resource.data.author && (
                      <div class="resource-card__author">
                        <strong>Author:</strong> {resource.data.author}
                      </div>
                    )}

                    {resource.data.tags && (
                      <div class="resource-card__tags">
                        {resource.data.tags.map((tag: string) => (
                          <span class="resource-card__tag">{tag}</span>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              </a>
            ))}
          </div>
        )
      }
    </div>
  </section>
</Layout>

<style>
  .empty-state {
    text-align: center;
    padding: var(--space-xl);
    color: var(--color-text-muted);
  }

  .resources-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: var(--space-lg);
  }

  .resource-card {
    display: block;
    text-decoration: none;
    background: var(--color-haystack-navy-tint-10);
    border: 1px solid var(--color-haystack-light-seafoam-green-transparent);
    border-radius: var(--radius-lg);
    padding: var(--space-md);
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
    height: 100%;
  }

  .resource-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
    border-color: var(--color-haystack-blue);
  }

  .resource-card__content {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: var(--space-sm);
  }

  .resource-card__header {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: var(--space-sm);
  }

  .resource-card__title {
    font-family: var(--font-family-display);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-primary);
    margin: 0;
    transition: color var(--transition-normal);
    line-height: 1.3;
    flex: 1;
  }

  .resource-card:hover .resource-card__title {
    color: var(--color-haystack-blue);
  }

  .resource-card__arrow {
    color: var(--color-text-muted);
    transition: all var(--transition-normal);
    opacity: 0.8;
    flex-shrink: 0;
    margin-top: 2px;
  }

  .resource-card:hover .resource-card__arrow {
    color: var(--color-haystack-blue);
    transform: translateX(4px);
    opacity: 1;
  }

  .resource-card__type {
    background: var(--color-haystack-seafoam-green);
    color: var(--color-haystack-navy);
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    align-self: flex-start;
    margin-bottom: var(--space-xs);
  }

  .resource-card__description {
    color: var(--color-text-secondary);
    font-size: var(--font-size-base);
    line-height: 1.5;
    margin: 0;
    flex: 1;
  }

  .resource-card__meta {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
    margin-top: auto;
    padding-top: var(--space-sm);
  }

  .resource-card__difficulty,
  .resource-card__author {
    font-size: var(--font-size-sm);
    color: var(--color-text-muted);
  }

  .resource-card__difficulty strong,
  .resource-card__author strong {
    color: var(--color-text-primary);
    font-weight: var(--font-weight-medium);
  }

  .resource-card__tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
    margin-top: var(--space-xs);
  }

  .resource-card__tag {
    background: var(--color-haystack-blue);
    color: white;
    padding: 0.25rem 0.5rem;
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
    transition: background-color var(--transition-normal);
  }

  .resource-card:hover .resource-card__tag {
    background: var(--color-haystack-navy);
  }

  @media (max-width: 768px) {
    .resources-grid {
      grid-template-columns: 1fr;
      gap: var(--space-md);
    }

    .resource-card {
      padding: var(--space-md);
    }

    .resource-card__title {
      font-size: var(--font-size-md);
    }
  }

  @media (max-width: 480px) {
    .resources-grid {
      grid-template-columns: 1fr;
      gap: var(--space-sm);
    }

    .resource-card {
      padding: var(--space-sm);
    }
  }
</style>
