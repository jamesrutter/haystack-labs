---
import { getCollection } from "astro:content";
import Layout from "@/layouts/layout.astro";
import ArrowRight from "@/assets/arrow-right.svg";
import Toolbar from "./toolbar.astro";

const projects = await getCollection("projects");
const sorted_projects = projects.sort((a, b) => b.data.year - a.data.year);
const years = await getCollection("years");
---

<Layout
  title="Projects - Haystack Labs"
  description="A collection of projects from Haystack Labs"
>
  <section class="section">
    <div class="wrapper">
      <h1 class="title">Projects</h1>

      <Toolbar years={years} />

      <div class="grid-auto lg spacious" id="projects-grid">
        {
          sorted_projects.map((project) => (
            <a
              href={`/projects/${project.id}`}
              class="project-card"
              data-year={project.data.year}
              data-title={project.data.title.toLowerCase()}
              data-category={project.data.category?.toLowerCase() || ""}
              data-tags={project.data.tags?.join(" ").toLowerCase() || ""}
            >
              <div class="content">
                <div class="header">
                  <h4>{project.data.title}</h4>
                  <div class="arrow">
                    <ArrowRight width="20" height="20" fill="currentColor" />
                  </div>
                </div>

                <div class="meta">
                  {project.data.category && (
                    <article class="category">
                      <strong>Category:</strong> {project.data.category}
                    </article>
                  )}

                  {project.data.tags && (
                    <article class="tags">
                      {project.data.tags.map((tag: string) => (
                        <span class="tag">{tag}</span>
                      ))}
                    </article>
                  )}
                </div>
              </div>
            </a>
          ))
        }
      </div>

      <!-- No results message -->
      <div id="no-results" class="no-results" style="display: none;">
        <p>No projects found matching your search criteria.</p>
      </div>
    </div>
  </section>
</Layout>

<style>
  .project-card {
    text-decoration: none;
    background: var(--color-haystack-navy-tint-10);
    border-radius: var(--radius-lg);
    box-shadow: var(--shadow-md);
    padding: var(--space-md);
    transition: all var(--transition-normal);
    position: relative;
    overflow: hidden;
    height: 100%;

    svg {
      color: var(--color-text-primary);
      transition: all var(--transition-normal);
      opacity: 0.8;
      flex-shrink: 0;
      margin-top: 5px;
    }

    &:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
      h4 {
        color: var(--color-haystack-blue);
      }
      svg {
        color: var(--color-haystack-blue);
        transform: translateX(4px);
        opacity: 1;
      }
    }

    &.hidden {
      display: none;
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: var(--space-sm);

    .header {
      width: 100%;
      display: flex;
      justify-content: space-between;
      gap: var(--space-sm);
    }

    h4 {
      margin: 0;
      flex: 1;
      transition: color var(--transition-normal);
    }
  }

  .meta {
    display: flex;
    width: 100%;
    flex-direction: column;
    gap: var(--space-xs);
    margin-top: auto;
    padding-top: var(--space-sm);

    article {
      font-family: var(--font-family-display);
      font-size: var(--font-size-sm);
      strong {
        color: var(--color-haystack-navy);
        font-weight: var(--font-weight-semibold);
      }
    }
  }

  .no-results {
    text-align: center;
    padding: var(--space-3xl);
    background: var(--color-haystack-navy-tint-10);
    border-radius: var(--radius-lg);

    p {
      font-family: var(--font-family-display);
      font-size: var(--font-size-lg);
      color: var(--color-text-muted);
      margin: 0;
    }
  }
</style>

<script>
  const project_cards = document.querySelectorAll(".project-card");
  const no_results = document.getElementById("no-results");

  let current_search_term = "";
  let current_year_filter = "all";

  document.addEventListener("search", (e) => {
    const custom_event = e as CustomEvent;
    current_search_term = custom_event.detail;
    filter_projects();
  });

  document.addEventListener("year-filter", (e) => {
    const custom_event = e as CustomEvent;
    current_year_filter = custom_event.detail;
    filter_projects();
  });

  function filter_projects() {
    let visible_count = 0;

    project_cards.forEach((card) => {
      const card_element = card as HTMLElement;
      const title = card_element.dataset.title || "";
      const category = card_element.dataset.category || "";
      const tags = card_element.dataset.tags || "";
      const year = card_element.dataset.year || "all";

      // Check search match
      const searchMatch =
        !current_search_term ||
        title.includes(current_search_term) ||
        category.includes(current_search_term) ||
        tags.includes(current_search_term);

      // Check year match
      const yearMatch =
        current_year_filter === "all" || year === current_year_filter;

      // Show/hide card
      if (searchMatch && yearMatch) {
        card_element.classList.remove("hidden");
        visible_count++;
      } else {
        card_element.classList.add("hidden");
      }
    });

    // Show/hide no results message
    if (no_results) {
      if (visible_count === 0) {
        no_results.style.display = "block";
      } else {
        no_results.style.display = "none";
      }
    }
  }
</script>
