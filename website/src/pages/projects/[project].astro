---
import { getCollection, render } from "astro:content";
import Layout from "@/layouts/layout-project.astro";
import ArrowRight from "@/assets/arrow-right.svg";
import Header from "./header-project.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { project: project.id },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await render(project);
---

<Layout
  title={`${project.data.title} - Haystack Labs`}
  description={`Information about ${project.data.title}`}
>
  <section class="section section-xs">
    <div class="wrapper">
      <Header
        title={project.data.title}
        year={project.data.year}
        type={project.data.type}
      />

      <!-- Project Metadata -->
      <div class="project-meta">
        <!-- Tools -->
        <div class="meta-cards">
          {
            project.data.tools && project.data.tools.length > 0 && (
              <div class="meta-card">
                <h3 class="meta-label">Tools</h3>
                <div class="meta-list">
                  {project.data.tools.map((tool: string) => (
                    <span class="meta-item">{tool}</span>
                  ))}
                </div>
              </div>
            )
          }
          <!-- Tags -->
          {
            project.data.tags && project.data.tags.length > 0 && (
              <div class="meta-card">
                <h3 class="meta-label">Tags</h3>
                <div class="meta-list">
                  {project.data.tags.map((tag: string) => (
                    <span class="meta-item">{tag}</span>
                  ))}
                </div>
              </div>
            )
          }
          <!-- Actions -->
          {
            project.data.url && (
              <div class="meta-card">
                <h3 class="meta-label">Actions</h3>
                <div class="meta-list">
                  <a
                    href={project.data.url}
                    target="_blank"
                    class="action-link primary"
                  >
                    <span>View Project</span>
                    <ArrowRight width="16" height="16" fill="currentColor" />
                  </a>
                </div>
              </div>
            )
          }
        </div>
      </div>
    </div>
  </section>
  <div class="wrapper">
    <Content />
  </div>
</Layout>

<style>
  /* Project Metadata */
  .project-meta {
    display: flex;
    flex-direction: column;
    gap: var(--space-lg);
    margin-bottom: var(--space-xs);
  }

  .meta-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--space-sm);
  }

  .meta-card {
    background: transparent;
    max-width: 450px;
    border: 1px solid var(--color-haystack-light-seafoam-green-transparent);
    border-radius: var(--radius-lg);
    padding: var(--space-md);
    transition: var(--transition-normal);
  }

  .meta-label {
    margin: 0 0 var(--space-sm) 0;
    font-family: var(--font-family-display);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .meta-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  .meta-item {
    background: var(--color-haystack-seafoam-green);
    color: var(--color-haystack-navy);
    padding: var(--space-xs) var(--space-sm);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-medium);
  }

  .action-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    padding: var(--space-sm) var(--space-md);
    border-radius: var(--radius-lg);
    font-family: var(--font-family-display);
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    text-decoration: none;
    transition: var(--transition-normal);
    border: 1px solid var(--color-border);
    background: var(--color-surface);
    color: var(--color-text-primary);
  }

  .action-link.primary {
    background: var(--color-haystack-seafoam-green);
    color: var(--color-haystack-navy);
    border-color: var(--color-haystack-seafoam-green);
  }

  .action-link:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
    border-color: var(--color-haystack-seafoam-green);
  }

  .action-link.primary:hover {
    background: var(--color-haystack-light-seafoam-green);
  }

  .action-link svg {
    transition: var(--transition-normal);
  }

  .action-link:hover svg {
    transform: translateX(2px);
  }
</style>
